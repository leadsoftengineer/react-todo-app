{"version":3,"sources":["components/title/title.js","components/todo-input/todo-input.js","components/todo-item/todo-item.js","components/todo-list/todo-list.js","components/footer/footer.js","containers/ToDo/todo.js","actions/actionCreator.js","constants.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/store.js","reducers/filters.js","reducers/index.js","index.js"],"names":["Title","_ref","title","react_default","a","createElement","className","defaultProps","ToDoInput","value","onChange","onKeyPress","placeholder","ToDoItem","text","isCompleted","removeTask","id","completeTask","onClick","ToDoList","tasksList","map","_ref2","todo_item_todo_item","key","FILTERS_BTN","Footer","amount","activeFilter","changeFilter","concat","ToDo","state","taskText","handleInputChange","target","_this","setState","addNewTask","length","addTask","props","Date","getTime","filterTasks","tasks","filter","task","getActiveTasksCounter","this","_this$props","filters","isTasksExist","filteredTasks","taskCounter","todo_input_todo_input","todo_list_todo_list","footer_footer","Component","connect","_ref3","type","App","react","components_title_title","ToDo_todo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","TASKS","load","namespace","preloadedState","arguments","undefined","Object","toConsumableArray","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.88b49446.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './title.css';\r\n\r\nconst Title = ({title})=> (\r\n    <h1 className=\"title\">{title}</h1>\r\n)\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nTitle.defaultProps = {\r\n    title: 'Simple title',\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './todo-input.css';\r\n\r\n\r\nconst ToDoInput = ({ value, onChange, onKeyPress}) => (\r\n    <div className=\"todo-input-wrapper\">\r\n        <i className=\"fa fa-plus\" />\r\n         \r\n         <input \r\n               className=\"todo-input\"\r\n               placeholder=\"Click to add task and hit Enter\"\r\n               onChange={onChange}              \r\n               value={value}\r\n               onKeyPress={onKeyPress}\r\n               />              \r\n    </div>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n    onChange: PropTypes.func,\r\n    onKeyPress: PropTypes.func,\r\n    value: PropTypes.string,\r\n    }\r\n\r\nToDoInput.defaultProps = {\r\n    onChange: ()=>{},\r\n    onKeyPress: ()=>{},\r\n    value: '',\r\n} \r\n\r\nexport default ToDoInput;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-item.css';\r\n\r\nconst ToDoItem = ( { text, isCompleted, removeTask, id , completeTask} ) => (\r\n    <li className=\"todo-item\" >\r\n        <i onClick={()=>completeTask(id)} className={ isCompleted ? 'mark fa fa-check-circle' : 'mark fa fa-circle'} />\r\n        <span className={ isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n        <i onClick={() => removeTask(id)} className=\"fa fa-times\"/>\r\n    </li>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n    text: PropTypes.string,\r\n    isCompleted: PropTypes.bool,\r\n    removeTask: PropTypes.func,\r\n    id: PropTypes.number,    \r\n}\r\n\r\nToDoItem.defaultProps = {\r\n    text: '',\r\n    isCompleted: false,\r\n    removeTask: ()=>{},\r\n    id:0\r\n}\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ToDoItem from '../todo-item/todo-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst ToDoList = ({ tasksList, removeTask, completeTask}) => (\r\n    <ul className=\"todo-list\">\r\n    {tasksList.map(({ id, text, isCompleted})=>(\r\n        <ToDoItem key ={id} id={id} text= {text} isCompleted = {isCompleted} removeTask={removeTask} completeTask={completeTask} />\r\n    ))}\r\n    </ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n    tasksList: PropTypes.array,\r\n    removeTask: PropTypes.func,\r\n    completeTask: PropTypes.func,\r\n}\r\n\r\nToDoList.defaultProps = {\r\n    tasksList: [],\r\n    removeTask: ()=>{},\r\n    completeTask: ()=>{},\r\n}\r\nexport default ToDoList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './footer.css';\r\n\r\nconst FILTERS_BTN = [\r\n    {\r\n        text: 'All',\r\n        id: 'all'\r\n    },\r\n    {\r\n        text:'Active',\r\n        id:'active'\r\n    },\r\n    {\r\n        text : 'Completed',\r\n        id: 'completed'\r\n    }\r\n]\r\n\r\nconst Footer = ({ amount, activeFilter,changeFilter})=>(\r\n    <div className=\"footer\">\r\n        <span className=\"amount\">{`${amount} Tasks left `}</span>\r\n        <div className=\"btn-group\">\r\n            {FILTERS_BTN.map(({text,id})=>(\r\n                <button\r\n                      onClick = {()=>{changeFilter(id)}} \r\n                      key={id}\r\n                      className= {id === activeFilter ? \"filter-btn-active\" : 'filter-btn' }\r\n                      >{text}</button>\r\n            ))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nFooter.propTypes = {\r\n    amount: PropTypes.number,\r\n    activeFilter: PropTypes.string,\r\n    changeFilter: PropTypes.func,\r\n}\r\n\r\nFooter.defaultProps = {\r\n    amount : 0,\r\n    activeFilter: 'all',\r\n    changeFilter: ()=>{},\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDoInput from '../../components/todo-input/todo-input';\r\nimport ToDoList from '../../components/todo-list/todo-list';\r\nimport Footer from '../../components/footer/footer';\r\nimport { addTask, removeTask, completeTask, changeFilter } from '../../actions/actionCreator';\r\nimport './todo.css'\r\n\r\n\r\n\r\n\r\n class ToDo extends Component {\r\n\r\n    state ={       \r\n        taskText: '',\r\n    }\r\n\r\n    handleInputChange = ({ target:{ value} }) =>{\r\n         this.setState({\r\n             taskText: value,\r\n         })\r\n    }\r\n\r\n\r\n     addNewTask = ( { key} ) => {\r\n         const { taskText } = this.state;\r\n\r\n         if( taskText.length>3 && key==='Enter'){\r\n            //call action addTask (added in connect below)\r\n            const { addTask } = this.props;\r\n\r\n             addTask((new Date()).getTime(),taskText,false);\r\n\r\n             this.setState({\r\n                 taskText:'',\r\n\r\n             })\r\n\r\n         }\r\n     }\r\n     \r\n     filterTasks = (tasks, activeFilter) =>{\r\n         switch(activeFilter){\r\n            case 'completed':\r\n                    return tasks.filter(task=>task.isCompleted);\r\n                    break;\r\n                    case 'active':\r\n                 return tasks.filter(task=>!task.isCompleted);\r\n                 break;\r\n                 default: return tasks;\r\n         }\r\n     }\r\n\r\n    getActiveTasksCounter = tasks => tasks.filter(task=>!task.isCompleted).length;\r\n\r\n    render() {\r\n\r\n        const { taskText } = this.state;\r\n        const { tasks, removeTask, completeTask, filters, changeFilter } = this.props;        \r\n        const isTasksExist = tasks && tasks.length>0;\r\n        const filteredTasks = this.filterTasks(tasks,filters);\r\n        const taskCounter = this.getActiveTasksCounter(tasks);\r\n\r\n        return (\r\n            <div className=\"todo-wrapper\">\r\n                <ToDoInput onKeyPress={this.addNewTask} onChange = {this.handleInputChange} value={taskText} />  \r\n                { isTasksExist && <ToDoList tasksList={filteredTasks} removeTask={removeTask} completeTask={completeTask}/>}\r\n                { isTasksExist && <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(({tasks,filters}) => ({\r\n    tasks,\r\n    filters,\r\n}),{addTask, removeTask, completeTask,changeFilter})(ToDo);\r\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK, CHANGE_FILTER } from \"../../src/constants\";\r\n\r\nexport const addTask = (id, text, isCompleted) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  text,\r\n  isCompleted\r\n});\r\n\r\nexport const removeTask = id => ({\r\n    type: REMOVE_TASK,\r\n    id\r\n  });\r\n\r\n  export const completeTask = id => ({\r\n    type: COMPLETE_TASK,\r\n    id\r\n  });\r\n\r\n  export const changeFilter = activeFilter=> ({\r\n      type: CHANGE_FILTER,\r\n      activeFilter,\r\n  })","export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';","import React from 'react';\nimport './App.css';\nimport {Fragment} from 'react';\nimport Title from './components/title/title';\nimport ToDo from './containers/ToDo/todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Fragment>\n            <Title title=\"TODO APP\" />\n             <ToDo />\n      </Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_TASK, REMOVE_TASK, COMPLETE_TASK } from '../../src/constants';\r\nimport {load} from 'redux-localstorage-simple';\r\n\r\nlet TASKS = load({ namespace: 'todo-list'});\r\n\r\nif ( !TASKS || !TASKS.tasks || !TASKS.tasks.length){\r\n    TASKS = {\r\n        tasks: [],\r\n    }\r\n}\r\n\r\n// const TASKS = [\r\n//     {\r\n//         id:1,\r\n//         text: 'Make React greater!',\r\n//         isCompleted: true\r\n//     },\r\n//     {\r\n//         id:2,\r\n//         text: 'Add Redux to your app!',\r\n//         isCompleted: false\r\n//     },\r\n//     {\r\n//         id:3,\r\n//         text: 'Use React Router!',\r\n//         isCompleted: false\r\n//     }\r\n// ];\r\n\r\n\r\nconst tasks = (state = TASKS.tasks, {id, text, isCompleted, type}) =>{\r\n    switch(type){\r\n        case ADD_TASK :\r\n            return [\r\n                ...state, {\r\n                    id ,\r\n                    text,\r\n                    isCompleted\r\n                }\r\n            ];\r\n            case REMOVE_TASK :\r\n                return [...state].filter(task=>task.id !== id);\r\n                case COMPLETE_TASK :\r\n                    return [...state].map(task=>{\r\n                        if (task.id === id){\r\n                            task.isCompleted = !task.isCompleted;   \r\n                        }\r\n                        return task;\r\n                    })\r\n            default: return state;\r\n    }\r\n}\r\nexport default tasks;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './index';\r\nimport {save} from 'redux-localstorage-simple';\r\n\r\nconst composeEnhancers = \r\nprocess.env.NODE_ENV !== 'production' &&\r\ntypeof window === 'object' && \r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\n\r\n    const configureStore = preloadedState =>(\r\n         createStore(\r\n             rootReducer,\r\n             preloadedState,\r\n             composeEnhancers(applyMiddleware(save({ namespace:'todo-list'}))),\r\n         )\r\n    );\r\n\r\n    const store = configureStore({});\r\n\r\n    export default store;\r\n","import { CHANGE_FILTER } from '../../src/constants';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter}) =>{\r\n    switch (type) {\r\n        case CHANGE_FILTER :\r\n            return activeFilter;\r\n            break;\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport default filter;","import {combineReducers} from 'redux';\r\nimport tasks from './tasks';\r\nimport filters from './filters';\r\n\r\nconst rootReducer = combineReducers({tasks,filters});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './reducers/store';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\n\nReactDOM.render(\n                <Provider store={store}>\n                <App />\n                </Provider>,\n                 document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}